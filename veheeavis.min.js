!function(t){"function"==typeof define&&define.amd?define(t):t()}(function(){"use strict";var t,e;t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0,e=function(){class Ploteeavis{constructor(t){this.container=document.querySelector(t.container),this.data=t.data,this.showGuide=!0===t.showGuide,this.scale=1,this.draggingModule=null,this.dragOffsetX=0,this.dragOffsetY=0,this.startPort=null,this.endPort=null,this.selectedModule=null,this.selectedConnection=null,this.hoverConnection=null,this.canvas=document.createElement("canvas"),this.container.appendChild(this.canvas),this.ctx=this.canvas.getContext("2d"),this.dpr=window.devicePixelRatio||1,this.canvas.style.width=this.container.clientWidth+"px",this.canvas.style.height=this.container.clientHeight+"px",this.canvas.width=this.container.clientWidth*this.dpr,this.canvas.height=this.container.clientHeight*this.dpr,this.ctx.scale(this.dpr,this.dpr),this.view={x:0,y:0,zoom:1},this.snapDistance=20,this.snapPort=null,this.contextMenu=this.createContextMenu(),this.container.appendChild(this.contextMenu),this.activeModule=null,this.validateData(this.data),this.addEventListeners(),this.render()}createContextMenu(){const t=document.createElement("div");t.style.cssText="\n      position: absolute;\n      background: white;\n      border: 1px solid #ccc;\n      padding: 5px 0;\n      box-shadow: 2px 2px 5px rgba(0,0,0,0.2);\n      display: none;\n      z-index: 1000;\n    ";const e=void 0;return["Copy","Delete","Add-Top-Port","Add-Left-Port","Add-Bottom-Port","Add-Right-Port"].forEach(e=>{const i=document.createElement("div");i.textContent=e,i.style.cssText="\n        padding: 5px 20px;\n        cursor: pointer;\n        &:hover { background: #f0f0f0; }\n      ",t.appendChild(i)}),t}render(){if(this.ctx.save(),this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.portRects=[],this.ctx.translate(this.view.x*this.dpr,this.view.y*this.dpr),this.ctx.scale(this.view.zoom,this.view.zoom),this.data.modules.forEach(t=>{this.drawModule(t),this.drawPorts(t)}),this.data.modules.every(t=>t.leftArray&&t.rightArray&&t.topArray&&t.bottomArray)&&this.data.connections.forEach(t=>{this.drawConnection(t)}),this.startPort&&this.drawTempConnectionToMouse(this.startPort,this.mouseX,this.mouseY),!0===this.showGuide){const t=this.data.modules.find(t=>"1"===t.id);t&&(this.ctx.save(),this.ctx.strokeStyle="red",this.ctx.lineWidth=2,this.portRects.filter(e=>e.module===t).forEach(t=>{const e=t.x+t.width/2,i=t.y+t.height/2,o=Math.max(t.width,t.height)/2+6;this.ctx.beginPath(),this.ctx.arc(e,i,o,0,2*Math.PI),this.ctx.stroke()}),this.ctx.restore());const e=this.data.modules.find(t=>"2"===t.id);if(t&&e){const i=t=>t.leftArray&&t.leftArray[0]||t.rightArray&&t.rightArray[0]||t.topArray&&t.topArray[0]||t.bottomArray&&t.bottomArray[0],o=i(t),s=i(e);if(o&&s){const i=this.portRects.find(e=>e.port===o&&e.module===t),n=this.portRects.find(t=>t.port===s&&t.module===e);if(i&&n){const t=i.x+i.width/2,e=i.y+i.height/2,o=n.x+n.width/2,s=n.y+n.height/2;this.ctx.save(),this.ctx.strokeStyle="red",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.moveTo(t,e),this.ctx.lineTo(o,s),this.ctx.stroke();const r=Math.atan2(s-e,o-t),h=12;this.ctx.beginPath(),this.ctx.moveTo(o,s),this.ctx.lineTo(o-h*Math.cos(r-Math.PI/8),s-h*Math.sin(r-Math.PI/8)),this.ctx.moveTo(o,s),this.ctx.lineTo(o-h*Math.cos(r+Math.PI/8),s-h*Math.sin(r+Math.PI/8)),this.ctx.stroke(),this.ctx.fillStyle="green",this.ctx.font="16px Arial";const c="Drag from one port to another port.";this.ctx.font="16px Arial";const a=void 0,d=this.ctx.measureText(c).width,l=22,f=(t+o)/2+10,p=(e+s)/2-30;this.ctx.fillStyle="yellow",this.ctx.fillRect(f-6,p-l+6,d+12,l),this.ctx.fillStyle="green",this.ctx.fillText(c,f,p),this.ctx.restore()}}}if(this.data.modules.length>0){const t=this.data.modules[0],{x:e,y:i,width:o,height:s}=t.position;this.ctx.save();const n="Right click on a module for menu.";this.ctx.font="16px Arial";const r=void 0,h=this.ctx.measureText(n).width,c=22,a=e+o+10,d=i+s-10;this.ctx.fillStyle="yellow",this.ctx.fillRect(a-6,d-c+6,h+12,c),this.ctx.fillStyle="green",this.ctx.fillText(n,a,d),this.ctx.restore()}}this.ctx.restore()}drawPorts(t){const{x:e,y:i,width:o,height:s}=t.position,n=t.leftArray,r=s/(n.length+2),h=6,c=e-3;n.forEach((o,s)=>{const n=i+(s+1)*r;this.ctx.fillStyle=`rgb(${100*o.portcolor}, 0, 0)`,this.ctx.fillRect(c,n,6,10),o.offsetX=c-e,o.offsetY=n-i,o.width=6,o.height=10;const h=new Rectangle(c,n,6,10);h.port=o,h.module=t,this.portRects.push(h)});const a=t.rightArray,d=s/(a.length+2),l=6,f=e+o-3;a.forEach((o,s)=>{const n=i+(s+1)*d;this.ctx.fillStyle=`rgb(${100*o.portcolor}, 0, 0)`,this.ctx.fillRect(f,n,6,10),o.offsetX=f-e,o.offsetY=n-i,o.width=6,o.height=10;const r=new Rectangle(f,n,6,10);r.port=o,r.module=t,this.portRects.push(r)});const p=t.topArray,u=o/(p.length+2),x=6,y=i-3;p.forEach((o,s)=>{const n=e+(s+1)*u;this.ctx.fillStyle=`rgb(${100*o.portcolor}, 0, 0)`,this.ctx.fillRect(n,y,10,6),o.offsetX=n-e,o.offsetY=y-i,o.width=10,o.height=6;const r=new Rectangle(n,y,10,6);r.port=o,r.module=t,this.portRects.push(r)});const m=t.bottomArray,g=o/(m.length+2),v=6,w=i+s-3;m.forEach((o,s)=>{const n=e+(s+1)*g;this.ctx.fillStyle=`rgb(${100*o.portcolor}, 0, 0)`,this.ctx.fillRect(n,w,10,6),o.offsetX=n-e,o.offsetY=w-i,o.width=10,o.height=6;const r=new Rectangle(n,w,10,6);r.port=o,r.module=t,this.portRects.push(r)})}validateData(t){const e=t.modules.map(t=>t.name);t.connections.forEach(t=>{if(!e.includes(t.from)||!e.includes(t.to))throw new Error(`Invalid connection: ${t.from} -> ${t.to}`)})}isPointNearLine(t,e,i,o,s,n,r=5){const h=void 0,c=void 0,a=s-i,d=n-o,l=void 0,f=a*a+d*d;let p=-1,u,x;0!=f&&(p=((t-i)*a+(e-o)*d)/f),p<0?(u=i,x=o):p>1?(u=s,x=n):(u=i+p*a,x=o+p*d);const y=t-u,m=e-x,g=void 0;return Math.sqrt(y*y+m*m)<r}isPointNearPolyline(t,e,i,o=5){for(let s=0;s<i.length-1;s++)if(this.isPointNearLine(t,e,i[s].x,i[s].y,i[s+1].x,i[s+1].y,o))return!0;return!1}getConnectionAtPoint(t,e){return this.data.connections.find(i=>!!(i.points&&i.points.length>0)&&this.isPointNearPolyline(t,e,i.points))}addEventListeners(){this.portRects=[],this.canvas.addEventListener("mousemove",t=>{const e=this.getCanvasCoords(t.clientX,t.clientY),i=this.getConnectionAtPoint(e.x,e.y);i!==this.hoverConnection&&(this.hoverConnection=i,this.render()),this.hoverConnection?this.canvas.style.cursor="pointer":this.canvas.style.cursor=""}),this.canvas.addEventListener("mousedown",t=>{const e=this.getCanvasCoords(t.clientX,t.clientY),i=this.getConnectionAtPoint(e.x,e.y);if(i)return this.selectedConnection=i,this.selectedModule=null,void this.render();const o=this.portRects.find(t=>t.contains(e.x,e.y));o?(this.startPortRect=o,this.startPort=o.port,this.startPort.module=o.module):this.data.modules.forEach(t=>{const{x:i,y:o,width:s,height:n}=t.position;e.x>=i&&e.x<=i+s&&e.y>=o&&e.y<=o+n&&(this.selectedModule=t,this.draggingModule=t,this.dragOffsetX=e.x-i,this.dragOffsetY=e.y-o,this.render())})}),this.canvas.addEventListener("mousemove",t=>{const e=this.getCanvasCoords(t.clientX,t.clientY);this.mouseX=e.x,this.mouseY=e.y;const i=this.portRects.find(t=>t.contains(e.x,e.y));if(this.canvas.style.cursor=i?"pointer":"",this.startPort){const t=this.findNearestPort(e.x,e.y);t?(this.snapPort=t,this.mouseX=t.x+t.width/2,this.mouseY=t.y+t.height/2):this.snapPort=null,this.render()}else this.draggingModule&&(this.draggingModule.position.x=e.x-this.dragOffsetX,this.draggingModule.position.y=e.y-this.dragOffsetY,this.updatePorts(this.draggingModule),this.render())}),this.canvas.addEventListener("mouseup",t=>{if(this.startPort){if(this.snapPort){const t={from:this.startPortRect.module.name,to:this.snapPort.module.name,fromPort:this.startPort.portid,toPort:this.snapPort.port.portid};this.data.connections.push(t),this.drawConnection(t)}this.startPort=null,this.snapPort=null,this.render()}else this.draggingModule&&(this.draggingModule=null,this.render())}),this.canvas.addEventListener("wheel",t=>{if(t.ctrlKey){t.preventDefault();const e=this.canvas.getBoundingClientRect(),i=(t.clientX-e.left)/this.dpr,o=(t.clientY-e.top)/this.dpr,s=this.view.zoom;this.view.zoom*=t.deltaY>0?.9:1.1,this.view.zoom=Math.max(.1,Math.min(this.view.zoom,5)),this.view.x-=(i-this.view.x)*(this.view.zoom/s-1),this.view.y-=(o-this.view.y)*(this.view.zoom/s-1),this.render()}}),this.canvas.addEventListener("contextmenu",t=>{t.preventDefault();const e=this.getCanvasCoords(t.clientX,t.clientY),i=this.data.modules.find(t=>{const{x:i,y:o,width:s,height:n}=t.position;return e.x>=i&&e.x<=i+s&&e.y>=o&&e.y<=o+n});if(i){this.activeModule=i;const t=this.contextMenu.offsetWidth,o=this.contextMenu.offsetHeight,s=window.innerWidth,n=window.innerHeight;let r=e.x,h=e.y;r+t>s&&(r=s-t),h+o>n&&(h=n-o),this.contextMenu.style.display="block",this.contextMenu.style.left=r+"px",this.contextMenu.style.top=h+"px"}}),this.contextMenu.addEventListener("click",t=>{const e=void 0;switch(t.target.textContent){case"Copy":this.copyModule(this.activeModule);break;case"Delete":this.deleteModule(this.activeModule);break;case"Add-Top-Port":this.addPort(this.activeModule,"top");break;case"Add-Left-Port":this.addPort(this.activeModule,"left");break;case"Add-Bottom-Port":this.addPort(this.activeModule,"bottom");break;case"Add-Right-Port":this.addPort(this.activeModule,"right")}this.contextMenu.style.display="none",this.render()}),document.addEventListener("click",t=>{t.target.closest("#diagram")||(this.selectedConnection=null,this.selectedModule=null,this.render()),this.contextMenu.style.display="none"}),this.canvas.addEventListener("contextmenu",t=>{t.preventDefault();const e=this.getCanvasCoords(t.clientX,t.clientY),i=this.getConnectionAtPoint(e.x,e.y);if(i)return this.selectedConnection=i,this.selectedModule=null,this.showConnectionContextMenu(t.clientX,t.clientY),void this.render()})}showConnectionContextMenu(t,e){const i=document.createElement("div");i.style.cssText=`\n      position: absolute;\n      background: white;\n      border: 1px solid #ccc;\n      padding: 5px 0;\n      box-shadow: 2px 2px 5px rgba(0,0,0,0.2);\n      z-index: 1000;\n      left: ${t}px;\n      top: ${e}px;\n    `;const o=void 0;["Delete-Connection"].forEach(t=>{const e=document.createElement("div");e.textContent=t,e.style.cssText="\n        padding: 5px 20px;\n        cursor: pointer;\n        &:hover { background: #f0f0f0; }\n      ",e.addEventListener("click",()=>{if("Delete-Connection"===t&&this.selectedConnection){const t=this.data.connections.indexOf(this.selectedConnection);t>-1&&(this.data.connections.splice(t,1),this.selectedConnection=null,this.render())}i.remove()}),i.appendChild(e)});const s=document.querySelector(".connection-context-menu");s&&s.remove(),i.classList.add("connection-context-menu"),document.body.appendChild(i);const n=t=>{i.contains(t.target)||(i.remove(),document.removeEventListener("click",n))};document.addEventListener("click",n)}copyModule(t){const e=JSON.parse(JSON.stringify(t));e.name=t.name+"_copy",e.position={...t.position,x:t.position.x+50,y:t.position.y+50},this.data.modules.push(e)}deleteModule(t){const e=this.data.modules.indexOf(t);e>-1&&(this.data.modules.splice(e,1),this.data.connections=this.data.connections.filter(e=>e.from!==t.name&&e.to!==t.name))}addPort(t,e){const i={portid:`${e}_${Date.now()}`,portcolor:1};switch(e){case"top":t.topArray.push(i);break;case"left":t.leftArray.push(i);break;case"bottom":t.bottomArray.push(i);break;case"right":t.rightArray.push(i)}}updatePorts(t){const{x:e,y:i,width:o,height:s}=t.position,n=t.leftArray,r=s/(n.length+2),h=6,c=e-3;n.forEach((t,o)=>{const s=i+(o+1)*r;t.offsetX=c-e,t.offsetY=s-i});const a=t.rightArray,d=s/(a.length+2),l=6,f=e+o-3;a.forEach((t,o)=>{const s=i+(o+1)*d;t.offsetX=f-e,t.offsetY=s-i});const p=t.topArray,u=o/(p.length+2),x=6,y=i-3;p.forEach((t,o)=>{const s=e+(o+1)*u;t.offsetX=s-e,t.offsetY=y-i});const m=t.bottomArray,g=o/(m.length+2),v=6,w=i+s-3;m.forEach((t,o)=>{const s=e+(o+1)*g;t.offsetX=s-e,t.offsetY=w-i})}getCanvasCoords(t,e){const i=this.canvas.getBoundingClientRect();return{x:(t-i.left-this.view.x)/this.view.zoom,y:(e-i.top-this.view.y)/this.view.zoom}}drawModule(t){const{x:e,y:i,width:o,height:s,color:n}=t.position;t!==this.selectedModule&&t!==this.draggingModule||(this.ctx.strokeStyle="rgba(179, 177, 177, 0.5)",this.ctx.lineWidth=4,this.ctx.strokeRect(e-4,i-4,o+8,s+8)),this.ctx.fillStyle=n,this.ctx.fillRect(e,i,o,s),this.ctx.strokeStyle="#000",this.ctx.lineWidth=2,this.ctx.strokeRect(e,i,o,s),this.ctx.shadowColor="rgba(0, 0, 0, 0.1)",this.ctx.shadowBlur=10,this.ctx.shadowOffsetX=5,this.ctx.shadowOffsetY=5,this.ctx.fillStyle="#000",this.ctx.font="12px Microsoft YaHei",this.ctx.fillText(t.name,e+10,i+20)}drawPolylineLink(t,e,i,o,s){t.beginPath(),t.moveTo(e,i),t.lineTo(e,i),t.lineTo(o,s),t.lineTo(o,s),t.strokeStyle="black",t.lineWidth=1,t.stroke()}drawPolylineLink_new(t,e,i,o,s,n,r,h){t.beginPath(),t.moveTo(e,i);const c=this.calculatePathPoints(e,i,o,s,n,r);h&&(h.points=c),c.forEach(e=>t.lineTo(e.x,e.y)),h===this.selectedConnection?(t.strokeStyle="#0066cc",t.lineWidth=2):h===this.hoverConnection?(t.strokeStyle="#3399ff",t.lineWidth=1.5):(t.strokeStyle="black",t.lineWidth=1),t.stroke()}calculatePathPoints(t,e,i,o,s,n){const r=[{x:t,y:e}],h=20;switch(s){case"right":r.push({x:t+h,y:e});break;case"left":r.push({x:t-h,y:e});break;case"bottom":r.push({x:t,y:e+h});break;case"top":r.push({x:t,y:e-h})}const c=r[1];let a;switch(n){case"left":a={x:i-h,y:o};break;case"right":a={x:i+h,y:o};break;case"top":a={x:i,y:o-h};break;case"bottom":a={x:i,y:o+h}}return"left"===s||"right"===s?(r.push({x:c.x,y:a.y}),r.push(a)):(r.push({x:a.x,y:c.y}),r.push(a)),r.push({x:i,y:o}),r}drawConnection(t){const e=this.data.modules.find(e=>e.name===t.from),i=this.data.modules.find(e=>e.name===t.to);if(!e||!i)return;const o=(t,e)=>t.leftArray.includes(e)?"left":t.rightArray.includes(e)?"right":t.topArray.includes(e)?"top":t.bottomArray.includes(e)?"bottom":void 0,s=e.leftArray.find(e=>e.portid===t.fromPort)||e.rightArray.find(e=>e.portid===t.fromPort)||e.topArray.find(e=>e.portid===t.fromPort)||e.bottomArray.find(e=>e.portid===t.fromPort),n=i.leftArray.find(e=>e.portid===t.toPort)||i.rightArray.find(e=>e.portid===t.toPort)||i.topArray.find(e=>e.portid===t.toPort)||i.bottomArray.find(e=>e.portid===t.toPort);if(!s||!n)return;t.points=[];const r=o(e,s),h=o(i,n),c=e.position.x+s.offsetX+s.width/2,a=e.position.y+s.offsetY+s.height/2,d=i.position.x+n.offsetX+n.width/2,l=i.position.y+n.offsetY+n.height/2;this.drawPolylineLink_new(this.ctx,c,a,d,l,r,h,t)}drawArrow(t,e,i,o){const s=10;this.ctx.save(),this.ctx.translate(t,e),this.ctx.rotate(i),this.ctx.beginPath(),this.ctx.moveTo(-10,-5),this.ctx.lineTo(0,0),this.ctx.lineTo(-10,5),this.ctx.strokeStyle=o,this.ctx.lineWidth=2,this.ctx.stroke(),this.ctx.restore()}drawTempConnectionToMouse(t,e,i){if(!t||!t.module||!t.module.position)return;const o=t.module.position.x+t.offsetX+t.width/2,s=t.module.position.y+t.offsetY+t.height/2;this.ctx.beginPath(),this.ctx.moveTo(o,s),this.ctx.lineTo(e,i);const n=this.snapPort?"#00ff00":"#ff0000";this.ctx.strokeStyle=n,this.ctx.lineWidth=this.snapPort?2:1,this.ctx.stroke();const r=Math.atan2(i-s,e-o);this.drawArrow(e,i,r,n)}findNearestPort(t,e){let i=null,o=this.snapDistance;for(const s of this.portRects){if(this.startPort&&s.port===this.startPort)continue;const n=s.x+s.width/2,r=s.y+s.height/2,h=Math.sqrt(Math.pow(t-n,2)+Math.pow(e-r,2));h<o&&(o=h,i=s)}return i}getCurrentState(){const t=void 0,e=void 0;return{modules:this.data.modules.map(t=>{const e=t=>({portid:t.portid,portcolor:t.portcolor,offsetX:t.offsetX,offsetY:t.offsetY,width:t.width,height:t.height});return{id:t.id,name:t.name,type:t.type,position:{...t.position},leftArray:t.leftArray?t.leftArray.map(e):[],rightArray:t.rightArray?t.rightArray.map(e):[],topArray:t.topArray?t.topArray.map(e):[],bottomArray:t.bottomArray?t.bottomArray.map(e):[]}}),connections:this.data.connections.map(t=>({from:t.from,to:t.to,fromPort:t.fromPort,toPort:t.toPort,points:t.points||[]}))}}}class Rectangle{constructor(t,e,i,o){this.x=t,this.y=e,this.width=i,this.height=o}contains(t,e){return t>=this.x&&t<=this.x+this.width&&e>=this.y&&e<=this.y+this.height}}return{Ploteeavis:Ploteeavis}},"function"==typeof define&&define.amd?define([],e):"object"==typeof module&&module.exports?module.exports=e():t.veheeavis=e()});
